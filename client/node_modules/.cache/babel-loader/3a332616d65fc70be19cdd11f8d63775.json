{"ast":null,"code":"var _jsxFileName = \"/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js\";\nimport React from 'react';\nimport axios from \"axios\";\nlet userSkills = []; //storing the user's skills \n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangedEvent = e => {\n      let value = e.target.value; //capture the char as user types\n\n      value = value.toLowerCase();\n      let matches = []; //matching input value to stored data\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value));\n        matches = this.state.skills.sort().filter(val => regex.test(val));\n      } //storing matched skills to matches and updating the state. \n\n\n      this.setState(() => ({\n        matches\n      }));\n      console.log(this.state.skills, \"skills\");\n    };\n\n    this.handleEnterKey = e => {\n      const matches = this.state.matches;\n\n      if (e.key === 'Enter' && matches.length > 0) {\n        userSkills.push(e.target.value);\n      } else if (e.key === 'Enter' && matches.length === 0) {\n        this.setState({\n          errorMessage: \"error\"\n        });\n      } else if (e.key === 'Backspace') {\n        this.setState({\n          errorMessage: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      skills: [],\n      jobs: [],\n      matches: [],\n      errorMessage: ''\n    };\n  } // fetching skills from database and updating it to data in state. \n\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get(\"/api/skills\");\n      let skillsArray = res.data.map(skill => skill.skill_name);\n      this.setState({\n        skills: skillsArray\n      });\n      console.log(this.state.skills, \"skills\");\n    } catch (error) {\n      console.log(error);\n    }\n  } // fetching jobs from database and updating it to jobs in state. \n\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get(\"/api/jobs\");\n      let jobsArray = res.data.map(jobs => jobs.jobs_name);\n      this.setState({\n        jobs: jobsArray\n      });\n      console.log(this.state.jobs, \"jobs\");\n    } catch (error) {\n      console.log(error);\n    }\n  } //matching input skill to skills stored in data\n\n\n  //outputs results of matched skills to user. \n  outputResults() {\n    const matches = this.state.matches;\n\n    if (matches.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, matches.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, item)));\n  } //handling errors \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChangedEvent,\n      onKeyDown: e => this.handleEnterKey(e),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.outputResults(), this.state.errorMessage, React.createElement(\"div\", {\n      className: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n} // fetchData = async arr => {\n//     try {\n//         await axios.get(`/api/skills/${arr}`); \n//         console.log(`skillname : ${arr} was passed matched`); \n//         const res = await axios.get('/api/skills') \n//         this.setState({\n//             matched: arr[0]\n//         })\n//         console.log(this.state.matched, \"matched\") \n//     } catch(error) {\n//         console.log(error)\n//     }\n// }\n\n\nexport default Search;","map":{"version":3,"sources":["/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js"],"names":["React","axios","userSkills","Search","Component","constructor","props","onChangedEvent","e","value","target","toLowerCase","matches","length","regex","RegExp","state","skills","sort","filter","val","test","setState","console","log","handleEnterKey","key","push","errorMessage","jobs","componentDidMount","res","get","skillsArray","data","map","skill","skill_name","error","jobsArray","jobs_name","outputResults","item","render"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport axios from \"axios\"; \n\nlet userSkills = [];  //storing the user's skills \n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            skills: [], \n            jobs: [], \n            matches: [],\n            errorMessage: '',\n        } \n    }\n\n    // fetching skills from database and updating it to data in state. \n    async componentDidMount() {\n        try {\n            const res = await axios.get(\"/api/skills\")\n            let skillsArray = res.data.map(skill => skill.skill_name) \n            this.setState({\n                skills: skillsArray \n            })\n            console.log(this.state.skills, \"skills\")\n        } catch(error){\n            console.log(error)\n        }\n    }\n\n    // fetching jobs from database and updating it to jobs in state. \n    async componentDidMount() {\n        try {\n            const res = await axios.get(\"/api/jobs\")\n            let jobsArray = res.data.map(jobs => jobs.jobs_name) \n            this.setState({\n                jobs: jobsArray \n            })\n            console.log(this.state.jobs, \"jobs\")\n        } catch(error){\n            console.log(error)\n        }\n    }\n\n    //matching input skill to skills stored in data\n    onChangedEvent = (e) => {\n        let value = e.target.value; //capture the char as user types\n        value = value.toLowerCase(); \n        let matches  = []; \n        //matching input value to stored data\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`); \n            matches = this.state.skills.sort().filter(val => regex.test(val))\n        }\n        //storing matched skills to matches and updating the state. \n       this.setState(()=> ({matches})); \n       console.log(this.state.skills, \"skills\")\n    }\n  \n    //outputs results of matched skills to user. \n    outputResults () {\n        const { matches } = this.state; \n        if (matches.length ===  0 ) {\n            return null; \n        } \n        return (\n            <ul> \n                {matches.map((item) => <li key={item}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    //handling errors \n    handleEnterKey = (e) => {\n        const { matches } = this.state;\n        if(e.key === 'Enter' && matches.length > 0) {\n            userSkills.push(e.target.value); \n        } else if(e.key === 'Enter' && matches.length === 0) {\n            this.setState({\n                errorMessage: \"error\"\n            })\n         } else if(e.key === 'Backspace') {\n            this.setState({\n                errorMessage: \"\"\n            })\n        }\n    }\n\n    render () {\n        return (\n            <div>  \n                <input onChange={this.onChangedEvent} onKeyDown={(e) => this.handleEnterKey(e)} type=\"text\"/> \n                {this.outputResults()}\n                {this.state.errorMessage} \n                <div className=\"results\">\n                </div>\n            </div>\n        )\n    }\n}\n\n// fetchData = async arr => {\n    //     try {\n    //         await axios.get(`/api/skills/${arr}`); \n    //         console.log(`skillname : ${arr} was passed matched`); \n    //         const res = await axios.get('/api/skills') \n    //         this.setState({\n    //             matched: arr[0]\n    //         })\n    //         console.log(this.state.matched, \"matched\") \n    //     } catch(error) {\n    //         console.log(error)\n    //     }\n    // }\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}