{"ast":null,"code":"import _slicedToArray from \"/Users/ashianagi/Desktop/TechWorks/findyourjob/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Result from './result';\nimport { Link } from 'react-router-dom';\nvar skills = [];\nvar results = [];\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangedEvent = e => {\n      let value = e.target.value;\n      value = value.toLowerCase();\n      let matches = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value, \"+\"), \"g\");\n        console.log(regex);\n        matches = this.state.data.sort().filter(val => regex.test(val));\n      }\n\n      this.setState(() => ({\n        matches\n      }));\n    };\n\n    this.handleEnterKey = e => {\n      const matches = this.state.matches;\n\n      if (e.key === 'Enter' && matches.length > 0) {\n        skills.push(e.target.value);\n      } else if (e.key === 'Enter' && matches.length === 0) {\n        this.setState({\n          errorMessage: \"Skill does not exist in the database. Try Again!\"\n        });\n      } else if (e.key === 'Backspace') {\n        this.setState({\n          errorMessage: ''\n        });\n      }\n    };\n\n    this.fetchResults = async skills => {\n      skills.map(async function (skill) {\n        try {\n          const res = await axios.get(\"/api/results/\".concat(skill));\n          let resultsArray = res.data.map(result => result.jobs_name);\n          results = results.concat(resultsArray);\n          this.setState({\n            results: results\n          });\n          console.log(this.state.results, \"results\");\n        } catch (error) {\n          console.log(error);\n        }\n      }, this);\n    };\n\n    this.state = {\n      data: [],\n      matches: [],\n      results,\n      skills,\n      errorMessage: ''\n    };\n  } // fetching skills from database and updating it to data in state. \n\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get(\"/api/skills\");\n      let skillsArray = res.data.map(skill => skill.skill_name);\n      this.setState({\n        data: skillsArray\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  } //matching inputted skill to skills stored in data\n\n\n  //outputs results of matched skills to user. \n  outputResults() {\n    const matches = this.state.matches;\n\n    if (matches.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, matches.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, item)));\n  } //handling input errors \n\n\n  //sorts the job results from most common to least\n  compressArray(results) {\n    var jobResults = [];\n    var copy = results.slice(0);\n\n    for (var i = 0; i < results.length; i++) {\n      var jobCount = 0;\n\n      for (var w = 0; w < copy.length; w++) {\n        if (results[i] === copy[w]) {\n          jobCount++;\n          delete copy[w];\n        }\n      }\n\n      if (jobCount > 0) {\n        var obj = {};\n        obj.value = results[i];\n        obj.count = jobCount;\n        jobResults.push(obj);\n      }\n    }\n\n    jobResults = jobResults.sort((a, b) => a.count < b.count ? 1 : -1);\n    console.log(jobResults);\n    return jobResults;\n  }\n\n  tagsfunction() {\n    const _useState = useState([]),\n          _useState2 = _slicedToArray(_useState, 2),\n          tags = _useState2[0],\n          setTags = _useState2[1];\n\n    const removeTags = indexToRemove => {\n      setTags([...tags.filter((_, index) => index !== indexToRemove)]);\n    };\n\n    const addTags = e => {\n      if (e.target.value !== \"\") {\n        setTags([...tags, e.target.value]);\n        props.selectedTags([...tags, e.target.value]);\n        e.target.value = \"\";\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"./About.html\",\n      id: \"about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"About\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Logo goes here\")), React.createElement(\"div\", {\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"enter your \", React.createElement(\"span\", {\n      id: \"tech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"tech\"), \" skills\"), React.createElement(\"div\", {\n      className: \"tags-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.tags.map((tag, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, tag), React.createElement(\"i\", {\n      className: \"material-icons\",\n      onClick: () => this.removeTags(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"close\")))), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"example: Javascript\",\n      onChange: this.onChangedEvent,\n      onKeyDown: e => this.handleEnterKey(e),\n      onKeyUp: e => e.key === \"Enter\" ? this.addTags(e) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(Result, {\n      compressArray: this.compressArray,\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js"],"names":["React","useState","axios","Result","Link","skills","results","Search","Component","constructor","props","onChangedEvent","e","value","target","toLowerCase","matches","length","regex","RegExp","console","log","state","data","sort","filter","val","test","setState","handleEnterKey","key","push","errorMessage","fetchResults","map","skill","res","get","resultsArray","result","jobs_name","concat","error","componentDidMount","skillsArray","skill_name","outputResults","item","compressArray","jobResults","copy","slice","i","jobCount","w","obj","count","a","b","tagsfunction","tags","setTags","removeTags","indexToRemove","_","index","addTags","selectedTags","render","tag"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'; \nimport axios from 'axios'; \nimport Result from './result'; \nimport {Link} from 'react-router-dom'; \n\nvar skills = []; \nvar results = []; \n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            data: [], \n            matches: [], \n            results, \n            skills, \n            errorMessage: '',\n        } \n\n    }\n\n    // fetching skills from database and updating it to data in state. \n    async componentDidMount() {\n        try {\n            const res = await axios.get(\"/api/skills\")\n            let skillsArray = res.data.map(skill => skill.skill_name) \n            this.setState({\n                data: skillsArray,\n            })\n        } catch(error){\n            console.log(error)\n        }\n    }\n\n    //matching inputted skill to skills stored in data\n    onChangedEvent = (e) => {\n        let value = e.target.value;\n        value = value.toLowerCase(); \n        let matches  = []; \n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}\\+`, \"g\"); \n            console.log(regex)\n            matches = this.state.data.sort().filter(val => regex.test(val))\n        }\n       this.setState(()=> ({matches}));\n    }\n  \n    //outputs results of matched skills to user. \n    outputResults () {\n        const { matches } = this.state; \n        if (matches.length ===  0 ) {\n            return null; \n        } \n        return (\n            <ul> \n                {matches.map((item) => <li key={item}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    //handling input errors \n    handleEnterKey = (e) => {\n        const { matches } = this.state;\n        if(e.key === 'Enter' && matches.length > 0) {\n            skills.push(e.target.value); \n        } else if(e.key === 'Enter' && matches.length === 0) {\n            this.setState({\n                errorMessage: \"Skill does not exist in the database. Try Again!\"\n            })\n         } else if(e.key === 'Backspace') {\n            this.setState({\n                errorMessage: ''\n            })\n        }\n    }\n\n    //fetching matched jobs from database.\n    fetchResults = async skills => {\n       skills.map(async function(skill) {\n            try {\n                const res = await axios.get(`/api/results/${skill}`); \n                let resultsArray = res.data.map(result => result.jobs_name);\n                results = results.concat(resultsArray); \n                this.setState({\n                    results: results\n                })\n                console.log(this.state.results, \"results\");\n            } catch(error) {\n                console.log(error);\n        }   }, this)\n    }\n\n    //sorts the job results from most common to least\n    compressArray(results) {\n            var jobResults = [];\n            var copy = results.slice(0);\n            for (var i = 0; i < results.length; i++) {\n                var jobCount = 0;\t\n                for (var w = 0; w < copy.length; w++) {\n                    if (results[i] === copy[w]) {\n                        jobCount++;\n                        delete copy[w];\n                    }\n                }\n                if (jobCount > 0) {\n                    var obj = {};\n                    obj.value = results[i];\n                    obj.count = jobCount;\n                    jobResults.push(obj);\n                }\n            }\n            jobResults = jobResults.sort((a,b) => (a.count < b.count) ? 1: -1); \n            console.log(jobResults)\n            return jobResults;\n        }\n    tagsfunction() {\n        const [tags, setTags] = useState([]); \n        const removeTags = indexToRemove => {\n            setTags([...tags.filter((_, index)=>index !== indexToRemove)])\n        }; \n        const addTags = e => {\n            if (e.target.value !== \"\") {\n                setTags([...tags, e.target.value]);\n                props.selectedTags([...tags, e.target.value]);\n                    e.target.value = \"\";\n            }\n        };\n    }\n    render () {\n        return (\n            <div>  \n                <nav>\n                    <Link to=\"./About.html\" id=\"about\">About</Link>\n                    <h4>Logo goes here</h4>\n                </nav>\n                <div id=\"container\">\n                    <h1>enter your <span id=\"tech\">tech</span> skills</h1>\n                    <div className=\"tags-input\">\n                        <ul>\n                            {this.tags.map((tag, index) => (\n                                <li key={index}>\n                                    <span>{tag}</span>\n                                    <i\n                                        className=\"material-icons\"\n                                        onClick={() => this.removeTags(index)}\n                                    >\n                                        close\n                                    </i>\n                                </li>\n                            ))}\n                        </ul>\n                        <input type=\"text\" placeholder=\"example: Javascript\" onChange={this.onChangedEvent} onKeyDown={(e) => this.handleEnterKey(e)}\n                        onKeyUp={e => e.key === \"Enter\" ? this.addTags(e) : null}\n                        />\n                        {/* <input onChange={this.onChangedEvent} onKeyDown={(e) => this.handleEnterKey(e)} type=\"text\" placeholder=\"example: Javascript\"/>\n                        {this.outputResults()}\n                        {this.state.errorMessage}  \n                        <div id=\"submit\">\n                            <button type=\"button\" onClick={()=> this.fetchResults(this.state.skills)}> \n                                <h4>Search</h4>\n                            </button>\n                        </div>\n                    </div>  */}\n                </div>\n                <Result compressArray={this.compressArray} results={this.state.results}/> \n            </div>\n        </div>\n        )\n    }\n}\nexport default Search; "]},"metadata":{},"sourceType":"module"}