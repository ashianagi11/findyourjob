{"ast":null,"code":"var _jsxFileName = \"/Users/ashianagi/Desktop/TechWorks/findyourjob/src/searchbar.js\";\nimport React from 'react';\nlet userSkills = []; //storing the user's skills \n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangedEvent = e => {\n      let value = e.target.value; //capture the char as user types\n\n      value = value.toLowerCase();\n      let matches = []; //matching input value to stored data\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value));\n        let skillsName = this.data.map((val, index) => val[index + 1]);\n        matches = skillsName.sort().filter(val => regex.test(val));\n      }\n\n      this.setState(() => ({\n        matches\n      }));\n    };\n\n    this.handleEnterKey = e => {\n      const matches = this.state.matches;\n\n      if (e.key === \"Delete\") {\n        console.log(e.key);\n      }\n\n      if (e.key === 'Enter' && matches.length > 0) {\n        userSkills.push(e.target.value);\n      } else if (e.key === 'Enter' && matches.length === 0) {\n        this.setState({\n          errorMessage: \"error\"\n        });\n\n        if (e.key === 'Delete' || e.key === 'Backspace') {\n          this.setState({\n            errorMessage: \"\"\n          });\n        }\n      }\n\n      console.log(this.state.errorMessage);\n    };\n\n    this.data = [{\n      1: \"java\"\n    }, {\n      2: \"javascript\"\n    }, {\n      3: \"sql\"\n    }];\n    this.state = {\n      matches: [],\n      errorMessage: ''\n    };\n  } //function to match characters. \n\n\n  outputResults() {\n    const matches = this.state.matches; //if nothing is matched then output null. \n\n    if (matches.length === 0) {\n      return null;\n    } //return the matched array. \n\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, matches.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChangedEvent,\n      onKeyPress: this.handleEnterKey,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.outputResults(), this.state.errorMessage);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ashianagi/Desktop/TechWorks/findyourjob/src/searchbar.js"],"names":["React","userSkills","Search","Component","constructor","props","onChangedEvent","e","value","target","toLowerCase","matches","length","regex","RegExp","skillsName","data","map","val","index","sort","filter","test","setState","handleEnterKey","state","key","console","log","push","errorMessage","outputResults","item","render"],"mappings":"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","sourcesContent":["import React from 'react'; \n\nlet userSkills = [];  //storing the user's skills \nclass Search extends React.Component {\n    constructor(props) {\n        super(props); \n        this.data = [\n            {1: \"java\"},\n            {2: \"javascript\"},\n            {3: \"sql\"}\n        ]\n        this.state = {\n            matches: [],\n            errorMessage: '',\n        } \n    }\n    \n    //function to match characters. \n    onChangedEvent = (e) => {\n        let value = e.target.value; //capture the char as user types\n        value = value.toLowerCase(); \n        let matches  = []; \n        //matching input value to stored data\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`); \n            let skillsName = this.data.map((val,index) => val[index+1])\n            matches = skillsName.sort().filter(val => regex.test(val))\n        }\n       this.setState(()=> ({matches})); \n    }\n\n    outputResults () {\n        const { matches } = this.state; \n        //if nothing is matched then output null. \n        if (matches.length ===  0 ) {\n            return null; \n        } \n        //return the matched array. \n        return (\n            <ul> \n                {matches.map((item) => <li key={item}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    handleEnterKey = (e) => {\n        const { matches } = this.state;\n        if(e.key === \"Delete\") {\n            console.log(e.key); \n        }\n        if(e.key === 'Enter' && matches.length > 0) {\n            userSkills.push(e.target.value); \n        } else if(e.key === 'Enter' && matches.length === 0) {\n            this.setState({\n                errorMessage: \"error\"\n            })\n            if(e.key === 'Delete' || e.key === 'Backspace') {\n                this.setState({\n                    errorMessage: \"\"\n                })\n            }\n         }\n        console.log(this.state.errorMessage) \n    }\n\n    render () {\n        return (\n            <div>  \n                <input onChange={this.onChangedEvent} onKeyPress={this.handleEnterKey} type=\"text\"/> \n                {this.outputResults()}\n                {this.state.errorMessage} \n            </div>\n        )\n    }\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}