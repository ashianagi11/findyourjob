{"ast":null,"code":"var _jsxFileName = \"/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangedEvent = e => {\n      let value = e.target.value; //capture the char as user types\n\n      value = value.toLowerCase();\n      let matches = []; //matching input value to stored data\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value));\n        matches = this.state.data.sort().filter(val => regex.test(val));\n      } //storing matched skills to matches and updating the state. \n\n\n      this.setState(() => ({\n        matches\n      }));\n    };\n\n    this.handleEnterKey = e => {\n      let skills = [];\n      const matches = this.state.matches;\n\n      if (e.key === 'Enter' && matches.length > 0) {\n        skills.push(e.target.value);\n      } else if (e.key === 'Enter' && matches.length === 0) {\n        this.setState({\n          errorMessage: \"error\"\n        });\n      } else if (e.key === 'Backspace') {\n        this.setState({\n          errorMessage: \"\"\n        });\n      }\n    };\n\n    this.fetchResults = async skills => {\n      try {\n        const res = await axios.get(\"/api/results/\".concat(skills));\n        let resultsArray = res.data.map(result => result.jobs_name);\n        this.setState({\n          result: resultsArray\n        });\n        console.log(this.state.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      data: [],\n      //holds skills data\n      matches: [],\n      result: [],\n      //holds the jobs results\n      errorMessage: ''\n    };\n  } // fetching skills from database and updating it to data in state. \n\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get(\"/api/skills\");\n      let skillsArray = res.data.map(skill => skill.skill_name);\n      this.setState({\n        data: skillsArray\n      });\n      console.log(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  } //matching input skill to skills stored in data\n\n\n  //outputs results of matched skills to user. \n  outputResults() {\n    const matches = this.state.matches;\n\n    if (matches.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, matches.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, item)));\n  } //handling errors \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChangedEvent,\n      onKeyDown: e => this.handleEnterKey(e),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.outputResults(), this.state.errorMessage, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.fetchResults(this.state.matches),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Search\"), this.state.result);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js"],"names":["React","axios","Link","Search","Component","constructor","props","onChangedEvent","e","value","target","toLowerCase","matches","length","regex","RegExp","state","data","sort","filter","val","test","setState","handleEnterKey","skills","key","push","errorMessage","fetchResults","res","get","resultsArray","map","result","jobs_name","console","log","error","componentDidMount","skillsArray","skill","skill_name","outputResults","item","render"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport axios from \"axios\"; \nimport {Link} from \"react-router-dom\"; \n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            data: [], //holds skills data\n            matches: [], \n            result: [], //holds the jobs results\n            errorMessage: '',\n        } \n    }\n\n     // fetching skills from database and updating it to data in state. \n    async componentDidMount() {\n        try {\n            const res = await axios.get(\"/api/skills\")\n            let skillsArray = res.data.map(skill => skill.skill_name) \n            this.setState({\n                data: skillsArray,\n            })\n            console.log(res.data);\n        } catch(error){\n            console.log(error)\n        }\n    }\n\n    //matching input skill to skills stored in data\n    onChangedEvent = (e) => {\n        let value = e.target.value; //capture the char as user types\n        value = value.toLowerCase(); \n        let matches  = []; \n        //matching input value to stored data\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`); \n            matches = this.state.data.sort().filter(val => regex.test(val))\n        }\n        //storing matched skills to matches and updating the state. \n       this.setState(()=> ({matches}));\n    }\n  \n    //outputs results of matched skills to user. \n    outputResults () {\n        const { matches } = this.state; \n        if (matches.length ===  0 ) {\n            return null; \n        } \n        return (\n            <ul> \n                {matches.map((item) => <li key={item}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    //handling errors \n    handleEnterKey = (e) => {\n        let skills = []; \n        const { matches } = this.state;\n        if(e.key === 'Enter' && matches.length > 0) {\n            skills.push(e.target.value);\n        } else if(e.key === 'Enter' && matches.length === 0) {\n            this.setState({\n                errorMessage: \"error\"\n            })\n         } else if(e.key === 'Backspace') {\n            this.setState({\n                errorMessage: \"\"\n            })\n        }\n    }\n\n    fetchResults = async skills => {\n        try {\n            const res = await axios.get(`/api/results/${skills}`); \n            let resultsArray = res.data.map(result => result.jobs_name) \n            this.setState({\n                result: resultsArray\n            })\n            console.log(this.state.result)\n        } catch(error) {\n            console.log(error);\n        }\n    }\n    render () {\n        return (\n            <div>  \n                <input onChange={this.onChangedEvent} onKeyDown={(e) => this.handleEnterKey(e)} type=\"text\"/> \n                {this.outputResults()}\n                {this.state.errorMessage} \n                <button type=\"button\" onClick={()=> this.fetchResults(this.state.matches)}> Search</button>\n                {this.state.result}\n            </div>\n        )\n    }\n}\nexport default Search; "]},"metadata":{},"sourceType":"module"}