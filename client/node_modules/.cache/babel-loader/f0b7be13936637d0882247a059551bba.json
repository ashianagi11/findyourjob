{"ast":null,"code":"var _jsxFileName = \"/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js\";\nimport React from 'react';\nlet userSkills = []; //storing the user's skills \n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangedEvent = e => {\n      let value = e.target.value; //capture the char as user types\n\n      value = value.toLowerCase();\n      let matches = [];\n      console.log(this.state.data); //matching input value to stored data\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value));\n        let skillsName = this.state.data.map((val, index) => val[index + 1]);\n        matches = skillsName.sort().filter(val => regex.test(val));\n      }\n\n      this.setState(() => ({\n        matches\n      }));\n    };\n\n    this.handleEnterKey = e => {\n      const matches = this.state.matches;\n\n      if (e.key === 'Enter' && matches.length > 0) {\n        userSkills.push(e.target.value);\n      } else if (e.key === 'Enter' && matches.length === 0) {\n        this.setState({\n          errorMessage: \"error\"\n        });\n      } else if (e.key === 'Backspace') {\n        this.setState({\n          errorMessage: \"\"\n        });\n      }\n\n      console.log(userSkills);\n    };\n\n    this.state = {\n      data: [],\n      matches: [],\n      errorMessage: ''\n    };\n  } // fetching data from backend\n\n\n  async componentDidMount() {\n    const res = await fetch(\"/api/skills\");\n    const data = await res.json();\n    let skillsArray = data.map(skill => skill.skill_name);\n    this.setState({\n      data: skillsArray\n    });\n  } //function to match characters. \n\n\n  outputResults() {\n    const matches = this.state.matches; //if nothing is matched then output null. \n\n    if (matches.length === 0) {\n      return null;\n    } //return the matched array. \n\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, matches.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChangedEvent,\n      onKeyDown: e => this.handleEnterKey(e),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.outputResults(), this.state.errorMessage);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ashianagi/Desktop/TechWorks/findyourjob/client/src/searchbar.js"],"names":["React","userSkills","Search","Component","constructor","props","onChangedEvent","e","value","target","toLowerCase","matches","console","log","state","data","length","regex","RegExp","skillsName","map","val","index","sort","filter","test","setState","handleEnterKey","key","push","errorMessage","componentDidMount","res","fetch","json","skillsArray","skill","skill_name","outputResults","item","render"],"mappings":"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","sourcesContent":["import React from 'react'; \n\nlet userSkills = [];  //storing the user's skills \nclass Search extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            data: [],\n            matches: [],\n            errorMessage: '',\n        } \n    }\n    // fetching data from backend\n    async componentDidMount() {\n        const res = await fetch(\"/api/skills\")\n        const data = await res.json(); \n        let skillsArray = data.map(skill => skill.skill_name) \n        this.setState({\n            data: skillsArray \n        })\n    }\n    //function to match characters. \n    onChangedEvent = (e) => {\n        let value = e.target.value; //capture the char as user types\n        value = value.toLowerCase(); \n        let matches  = []; \n        console.log(this.state.data); \n        //matching input value to stored data\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`); \n            let skillsName = this.state.data.map((val,index) => val[index+1])\n            matches = skillsName.sort().filter(val => regex.test(val))\n        }\n       this.setState(()=> ({matches})); \n    }\n\n    outputResults () {\n        const { matches } = this.state; \n        //if nothing is matched then output null. \n        if (matches.length ===  0 ) {\n            return null; \n        } \n        //return the matched array. \n        return (\n            <ul> \n                {matches.map((item) => <li key={item}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    handleEnterKey = (e) => {\n        const { matches } = this.state;\n        if(e.key === 'Enter' && matches.length > 0) {\n            userSkills.push(e.target.value); \n        } else if(e.key === 'Enter' && matches.length === 0) {\n            this.setState({\n                errorMessage: \"error\"\n            })\n         } else if(e.key === 'Backspace') {\n            this.setState({\n                errorMessage: \"\"\n            })\n        }\n        console.log(userSkills)\n    }\n\n    render () {\n        return (\n            <div>  \n                <input onChange={this.onChangedEvent} onKeyDown={(e) => this.handleEnterKey(e)} type=\"text\"/> \n                {this.outputResults()}\n                {this.state.errorMessage} \n            </div>\n        )\n    }\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}